apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "awx.fullname" . }}-task
  labels:
    app.kubernetes.io/name: {{ include "awx.name" . }}-task
    helm.sh/chart: {{ include "awx.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.task.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "awx.name" . }}-task
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "awx.name" . }}-task
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
      - name: check-mq-ready
        image: {{ .Values.rabbitmq.image.repository }}:{{ .Values.rabbitmq.image.tag }}
        env:
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-rabbitmq
              key: rabbitmq-password
        command:
          - /bin/bash
          - -c
          - "until test $(curl --connect-timeout 5 --silent --show-error --fail http://admin:${RABBITMQ_PASSWORD}@{{ .Release.Name }}-rabbitmq:{{ .Values.rabbitmq.service.managerPort }}/api/healthchecks/node) == '{\"status\":\"ok\"}'; do echo waiting for rabbitmq; sleep 2; done;"
      - name: check-mc-ready
        image: busybox:latest
        command:
          - /bin/sh
          - -c
          - "until echo stats | nc {{ .Release.Name }}-memcached 11211; do echo waiting for memcached; sleep 2; done;"
      - name: check-db-ready
        image: {{ include "postgres-image" . }}
        command:
          - sh
          - -c
          - "until pg_isready -h {{ include "awx-db-host" . }} -U {{ include "awx-db-user" . }} -p {{ include "awx-db-port" . }}; do echo waiting for database; sleep 2; done;"
      - name: awx-migrate
        image: "{{ .Values.task.image.repository }}:{{ .Values.task.image.tag }}"
        imagePullPolicy: {{ .Values.task.image.pullPolicy }}
        command:
          - /usr/bin/awx-manage
          - migrate
          - --noinput
        volumeMounts:
{{ include "awx.volumeMounts" . | indent 12 }}
        resources:
          {{ toYaml .Values.task.resources | indent 12 }}
      containers:
        - name: awx-task
          image: "{{ .Values.task.image.repository }}:{{ .Values.task.image.tag }}"
          imagePullPolicy: {{ .Values.task.image.pullPolicy }}
          env:
            - name: AWX_SKIP_MIGRATIONS
              value: "true"
          command:
            - /usr/bin/launch_awx_task.sh
          readinessProbe:
            exec:
              command:
                - /usr/bin/awx-manage
                - stats
            initialDelaySeconds: 30
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - /usr/bin/awx-manage
                - stats
            initialDelaySeconds: 30
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10
          volumeMounts:
{{ include "awx.volumeMounts" . | indent 12 }}
          resources:
{{ toYaml .Values.task.resources | indent 12 }}
    {{- if .Values.task.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.task.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.task.affinity }}
      affinity:
{{ toYaml .Values.task.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.task.tolerations }}
      tolerations:
{{ toYaml .Values.task.tolerations | indent 8 }}
    {{- end }}
      volumes:
{{ include "awx.volumes" . | indent 8 }}
